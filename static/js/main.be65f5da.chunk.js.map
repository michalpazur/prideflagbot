{"version":3,"sources":["redux/modules/theme.js","static/icon.jpg","components/Toolbar/Toolbar.js","App.js","redux/store.js","index.js"],"names":["themeConstants","themeAction","theme","hasChanged","type","initialState","themeReducer","state","action","links","name","link","useStyles","makeStyles","appbar","backdropFilter","backgroundColor","palette","background","paper","padding","toolbar","maxWidth","width","margin","avatar","marginRight","fontWeight","fontSize","color","text","primary","breakpoints","down","display","spacer","flexGrow","alignItems","textAlign","activeLink","button","twitter","main","iconSpacer","height","icon","position","bottomRoot","paddingBottom","flexDirection","Toolbar","classes","useState","isOpen","setIsOpen","useSelector","muiTheme","useTheme","isMobile","useMediaQuery","dispatch","useDispatch","location","useLocation","useEffect","renderLinks","map","component","Link","underline","to","pathname","className","clsx","renderButtons","Fragment","Button","size","variant","onClick","href","target","AppBar","elevation","Avatar","src","Typography","Hidden","smDown","mdUp","Zoom","in","Collapse","root","boxSizing","minHeight","default","innerRoot","App","basename","path","rootReducer","combineReducers","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","devToolsEnhancer","subscribe","_","throttle","stringify","setItem","saveState","getState","configureStore","Wrapper","children","defaultTheme","prefersDarkMode","useMemo","createTheme","secondary","typography","fontFamily","join","shape","borderRadius","overrides","MuiTypography","transition","transitions","create","duration","standard","MuiLink","MuiButton","sizeSmall","minWidth","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be65f5da.chunk.js","sourcesContent":["export const themeConstants = {\r\n  CHANGE_THEME: \"CHANGE_THEME\",\r\n};\r\n\r\nexport const themeAction = {\r\n  changeTheme: ({ theme, hasChanged }) => ({\r\n    type: themeConstants.CHANGE_THEME,\r\n    theme,\r\n    hasChanged,\r\n  }),\r\n};\r\n\r\nconst initialState = {\r\n  hasChanged: false,\r\n  theme: \"light\",\r\n};\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case themeConstants.CHANGE_THEME: {\r\n      return {\r\n        ...state,\r\n        theme: action.theme,\r\n        hasChanged: action.hasChanged,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","export default __webpack_public_path__ + \"static/media/icon.6d1c8638.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport MenuIcon from \"@material-ui/icons/MenuRounded\";\r\nimport CloseIcon from \"@material-ui/icons/CloseRounded\";\r\nimport LightThemeIcon from \"@material-ui/icons/WbSunnyOutlined\";\r\nimport DarkThemeIcon from \"@material-ui/icons/Brightness2Outlined\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { themeAction } from \"../../redux/modules/theme\";\r\nimport clsx from \"clsx\";\r\nimport icon from \"../../static/icon.jpg\";\r\n\r\nconst links = [\r\n  {\r\n    name: \"Flag list\",\r\n    link: \"/\",\r\n  },\r\n  {\r\n    name: \"FAQ\",\r\n    link: \"/faq\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    backdropFilter: \"blur(20px)\",\r\n    backgroundColor: theme.palette.background.paper + \"B7\",\r\n    padding: \"0px 30px\",\r\n  },\r\n  toolbar: {\r\n    padding: \"0px\",\r\n    maxWidth: \"1280px\",\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  avatar: {\r\n    marginRight: \"20px\",\r\n  },\r\n  name: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"18px\",\r\n    color: theme.palette.text.primary,\r\n    marginRight: \"20px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  spacer: {\r\n    flexGrow: \"1\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  link: {\r\n    fontSize: \"18px\",\r\n    \"&:not(:last-of-type)\": {\r\n      marginRight: \"20px\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginRight: \"0px\",\r\n      },\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"10px 0px\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  activeLink: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  button: {\r\n    marginRight: \"10px\",\r\n  },\r\n  twitter: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  iconSpacer: {\r\n    width: \"24px\",\r\n    height: \"24px\",\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n  },\r\n  bottomRoot: {\r\n    paddingBottom: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Toolbar = () => {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const theme = useSelector((state) => state.themeReducer.theme);\r\n  const muiTheme = useTheme();\r\n  const isMobile = useMediaQuery(muiTheme.breakpoints.down(\"sm\"));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      setIsOpen(false);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  const renderLinks = () => {\r\n    return links.map((link) => (\r\n      <MuiLink\r\n        color=\"textPrimary\"\r\n        component={Link}\r\n        underline=\"none\"\r\n        to={link.link}\r\n        aria-selected={location.pathname === link.link}\r\n        className={clsx(classes.link, {\r\n          [classes.activeLink]: location.pathname === link.link,\r\n        })}\r\n        key={link.link}\r\n      >\r\n        {link.name}\r\n      </MuiLink>\r\n    ));\r\n  };\r\n\r\n  const renderButtons = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          className={classes.button}\r\n          onClick={() =>\r\n            dispatch(\r\n              themeAction.changeTheme({\r\n                theme: theme === \"dark\" ? \"light\" : \"dark\",\r\n                hasChanged: true,\r\n              })\r\n            )\r\n          }\r\n        >\r\n          {theme === \"light\" ? <LightThemeIcon /> : <DarkThemeIcon />}\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          component=\"a\"\r\n          href=\"https://twitter.com/prideflagbot\"\r\n          target=\"_blank\"\r\n          aria-label=\"PrideFlagBot's Twitter profile\"\r\n        >\r\n          <TwitterIcon className={classes.twitter} />\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AppBar elevation={3} className={classes.appbar} color=\"transparent\">\r\n      <MuiToolbar className={classes.toolbar}>\r\n        <Avatar src={icon} className={classes.avatar} />\r\n        <Typography className={classes.name}>PrideFlagBot</Typography>\r\n        <div className={classes.spacer}>\r\n          <Hidden smDown>{renderLinks()}</Hidden>\r\n        </div>\r\n        <Hidden smDown>{renderButtons()}</Hidden>\r\n        <Hidden mdUp>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n          >\r\n            <div className={classes.iconSpacer} />\r\n            <Zoom in={isOpen}>\r\n              <CloseIcon className={classes.icon} />\r\n            </Zoom>\r\n            <Zoom in={!isOpen}>\r\n              <MenuIcon className={classes.icon} />\r\n            </Zoom>\r\n          </Button>\r\n        </Hidden>\r\n      </MuiToolbar>\r\n      <Collapse in={isOpen}>\r\n        <div className={classes.bottomRoot}>\r\n          {renderLinks()}\r\n          <div>{renderButtons()}</div>\r\n        </div>\r\n      </Collapse>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport Toolbar from \"./components/Toolbar/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    boxSizing: \"border-box\",\r\n    padding: \"108px 30px 30px\",\r\n    minHeight: \"100vh\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  innerRoot: {\r\n    maxWidth: \"1280px\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router basename=\"/prideflagbot\">\r\n      <Toolbar />\r\n      <div className={classes.root}>\r\n        <div className={classes.innerRoot}>\r\n          <Switch>\r\n            <Route path=\"/\"></Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport _ from \"lodash\";\r\n\r\nimport themeReducer from \"./modules/theme\";\r\n\r\nconst rootReducer = combineReducers({\r\n  themeReducer: themeReducer,\r\n});\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    return;\r\n  }\r\n};\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(rootReducer, loadState(), devToolsEnhancer());\r\n  store.subscribe(\r\n    _.throttle(() => {\r\n      saveState({\r\n        themeReducer: store.getState().themeReducer,\r\n      });\r\n    }, 1000)\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport const store = configureStore();\r\n","import React, { useEffect, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport { createTheme, useTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { store } from \"./redux/store\";\nimport { themeAction } from \"./redux/modules/theme\";\n\nconst Wrapper = ({ children }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector((state) => state.themeReducer.theme);\n  const defaultTheme = useTheme();\n  const hasChanged = useSelector((state) => state.themeReducer.hasChanged);\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  useEffect(() => {\n    if (!hasChanged) {\n      dispatch(\n        themeAction.changeTheme({\n          theme: prefersDarkMode ? \"dark\" : \"light\",\n          hasChanged: false,\n        })\n      );\n    }\n  }, [prefersDarkMode]);\n\n  const muiTheme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: theme,\n          background: {\n            paper: theme === \"light\" ? \"#FFFFFF\" : \"#0A1929\",\n            default: theme === \"light\" ? \"#F3F6F9\" : \"#001E3C\",\n          },\n          primary: {\n            main: theme === \"light\" ? \"#007FFF\" : \"#3399FF\",\n          },\n          text: {\n            main: theme === \"light\" ? \"#0A1929\" : \"#FFFFFF\",\n            secondary: theme === \"light\" ? \"#46505A\" : \"#AAB4BE\",\n          },\n        },\n        typography: {\n          fontFamily: ['\"IBM Plex Sans\"', \"Roboto\", \"sans-serif\"].join(\", \"),\n        },\n        shape: {\n          borderRadius: \"10px\",\n        },\n        overrides: {\n          MuiTypography: {\n            root: {\n              transition: defaultTheme.transitions.create(\"color\", {\n                duration: defaultTheme.transitions.duration.standard,\n              }),\n            },\n          },\n          MuiLink: {\n            root: {\n              fontFamily: ['\"IBM Plex Sans\"', \"Roboto\", \"sans-serif\"].join(\n                \", \"\n              ),\n            },\n          },\n          MuiButton: {\n            sizeSmall: {\n              padding: \"5px 10px\",\n              minWidth: \"unset\",\n            },\n          },\n        },\n      }),\n    [theme]\n  );\n\n  return <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Wrapper>\n        <App />\n      </Wrapper>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}